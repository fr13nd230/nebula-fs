// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package store

import (
	"context"
)

const getAllFiles = `-- name: GetAllFiles :many
select id, user_id, filename, mime_type, total_size, chunk_count, created_at from files
limit $1 offset $2
`

type GetAllFilesParams struct {
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

func (q *Queries) GetAllFiles(ctx context.Context, arg GetAllFilesParams) ([]File, error) {
	rows, err := q.db.Query(ctx, getAllFiles, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []File
	for rows.Next() {
		var i File
		if err := rows.Scan(
			&i.ID,
			&i.UserID,
			&i.Filename,
			&i.MimeType,
			&i.TotalSize,
			&i.ChunkCount,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
